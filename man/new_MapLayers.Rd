% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/01-modelMap_MapLayers-class.R
\name{new_MapLayers}
\alias{new_MapLayers}
\title{MapLayers S3 Class}
\usage{
new_MapLayers(
  Maps,
  terrestrial,
  centerMap,
  showBorders = TRUE,
  grid = FALSE,
  centerLine = FALSE,
  xlim = NULL,
  ylim = NULL
)
}
\arguments{
\item{Maps}{A named list of \code{sf} spatial objects containing map layers.}

\item{terrestrial}{Integer;  show only estimates on land masses (1), oceans (-1) or all (0);
\code{1} to draw ocean fill, \code{-1} to draw land fill.}

\item{centerMap}{Character; either \code{"Europe"} or \code{"Pacific"} (or any
non-"Europe" string to trigger split logic).}

\item{showBorders}{Logical; add country borders.}

\item{grid}{Logical; add graticule grid lines.}

\item{centerLine}{Logical; add a vertical line at the center longitude (0 in
the plotting coordinate space you provide).}

\item{xlim, ylim}{Numeric length-2 vectors with plot limits in degrees.}
}
\value{
An object of class \code{"MapLayers"}.
}
\description{
A lightweight S3 class to manage and draw map layers (ocean, land, coastlines,
grid lines, country borders, and an optional center meridian) on an existing
plot. Supports "Europe" and "Pacific" map centers. When centered on "Pacific",
layers are split into \code{-180} and \code{+180} halves to handle wrapping.
}
\section{Expected \code{Maps} structure}{

For \strong{centerMap == "Europe"}:
\itemize{
  \item \code{$ocean}, \code{$land}, \code{$coast}, \code{$grids}, \code{$borders}
}
For \strong{centerMap != "Europe"} (e.g. "Pacific"):
\itemize{
  \item \code{$`ocean-180`}, \code{$`ocean+180`}, \code{$`land-180`}, \code{$`land+180`}
  \item \code{$`coast-180`}, \code{$`coast+180`}, \code{$`grids-180`}, \code{$`grids+180`}
  \item \code{$`borders-180`}, \code{$`borders+180`}
}

All layers are expected as \code{sf} objects (polygons/lines). Internally we
convert to \code{sp} for plotting.
}

\examples{
\dontrun{
ml <- new_MapLayers(Maps, terrestrial = 1, centerMap = "Pacific",
                    showBorders = TRUE, grid = TRUE, centerLine = FALSE,
                    xlim = c(-180, 180), ylim = c(-60, 75))
plot(0, 0, type = "n", xlim = c(-180, 180), ylim = c(-90, 90), xlab = "lon", ylab = "lat")
plot(ml)  # draws ocean, coastlines, optional grid/borders
}
}
